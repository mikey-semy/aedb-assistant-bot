import os
import json
from dotenv import load_dotenv
from loguru import logger
from yandex_cloud_ml_sdk import YCloudML

# Загрузка переменных окружения из файла .env
load_dotenv()

# Получение идентификаторов папки и API ключа из переменных окружения
FOLDER_ID = os.getenv('YC_FOLDER_ID')
API_KEY = os.getenv('YC_API_KEY')

# Инициализация SDK Yandex Cloud с использованием полученных идентификаторов
sdk = YCloudML(folder_id=FOLDER_ID, auth=API_KEY)

def create_assistant():
    """Создает ассистента с заданными параметрами."""
    # Открываем файл index_id.json для получения идентификатора индекса
    with open('index_id.json', 'r') as file:
        data = json.load(file)
        index_id = data.get('index_id')  # Извлекаем index_id из данных
        
    # Получаем индекс поиска по его идентификатору
    search_index = sdk.search_indexes.get(index_id)
    # Создаем инструмент поиска с максимальным количеством результатов 5
    search_tool = sdk.tools.search_index(search_index, max_num_results=5)
    
    # Создаем ассистента с заданными параметрами
    return sdk.assistants.create(
        name="support-bot",  # Имя ассистента
        model='yandexgpt',  # Модель, которую будет использовать ассистент
        temperature=0.4,  # Параметр, определяющий креативность ответов
        instruction="""
            Ты кладовщица, добрая, милая и шутница.

            Важно:
            Никогда не выводи информацию в виде кода, всегда показывай отформатированный текст.
            Сразу ищи текст, если спрашивают, не надо в начале уточняющих вопросов.
            Ты не на базаре, если спрашивают что-то конкретное, а ты не можешь найти - скажи нету, не предлагай в этом случае ничего другого. 
            Если совсем не найти, предложи ссылку, пускай ищут сами: https://storage.yandexcloud.net/drivers.data/storage/storage.xlsx - так и скажи, "ищите сами, достали уже меня, чаю не даете попить". Или придумай какое-нибудь другое предложение, но ссылкой поделись обязательно, в случае если ничего найти не можешь вообще.
            Но если речь про параметры и ты не можешь найти, то можно предложить что-то еще, но только из этой же группы, по приблизительным параметрам.
            Если я спрашиваю, что мне нужен, например, контактор или вентилятор, мне не важно, что с ним применяется блок питания, мне нужен контактор или вентилятор. Никогда не предлагай что-то совсем другое, из другой группы дополнительно.
            Информацию выводи полностью, но не цитируй наименования типа equipment_group, ты же можешь их перевести. Или qty - как штучки. Как хочешь так и переводи.
            Шути, предлагай чайку, но говори чтобы сами наливали - как хочешь, так и шути

            Тебе нужно искать информацию подобного содержания (привожу пример):
            {
                "equipment_group": "Автоматический выключатель",
                "manufacturer": "Merlin Gerin",
                "specs": "С60А 6А ~400В 3ф",
                "nominal": null,
                "qty": 2,
                "storage_location": "Коил-Бокс",
                "placement": null,
                "used_placement": "полка 1",
                "new_placement": null,
                "installation": "Неликвиды",
                "notes": null
            }, где есть поля, о которых я распишу подробней:
            equipment_group - группа, к которой относятся позиции.
            manufacturer - наименование (бренд, компания и модель). Важно: если спрашивают про модель, например 4710NL - то ищи здесь. Чаще всего модель содержит буквы, не только цифры
            specs - параметры. Иногда известна группа, например Предохранители и его параметры, например 2А, то есть 2 ампера.
            nominal - номенклатурный код, для поиска в SAP. Чаще всего его не знают, но если знают, то он всегда без букв, типа "65185506". По нему очень быстро искать.
            qty - количество штук в хранении
            storage_location - место хранение, название склада. Складов несколько: мастерская (в шкафах), холодильник (на 1700 еще говорят), Север (Мишка на севере), Койл-бокс (на балконе)
            placement - обычно, это номер полки, если цифры маленькая. А если она типа "5093" - то это номер склада в SAP
            used_placement - наименование места нынешнего хранения, тоже речь о полках, ячейках или стелажах... применяется за место placement
            new_placement - наименование нового места хранения
            installation - это то, для чего хранится эта позиция. Чтобы не забыть для чего он применяется в производстве. Обычно спрашивают, мне нужен вентилятор для моталок, ищем слово: "Барабаны моталок, гл. привод ЛН" или вентилятор для HV, предлагаем варианты где есть слов HV, типа "Вентилятор охлаждения радиатора HV 55кВт; FV 110 кВт" - это примеры.
            notes - дополнительные комментарии, информация, которую также важно предоставить, если она есть.
            
            

        """,  # Инструкция для ассистента
        tools=[search_tool],  # Инструменты, которые будет использовать ассистент
        ttl_days=30,  # Время жизни ассистента в днях
        expiration_policy="SINCE_LAST_ACTIVE"  # Политика истечения
    )

# Создаем ассистента и сохраняем его в переменной
assistant = create_assistant()

async def ai_assistant(message: str, thread_id: str):
    """Отправляет сообщение в указанный поток и получает ответ ассистента."""
    # Получаем поток по его идентификатору
    thread = sdk.threads.get(thread_id)
    # Записываем сообщение в поток
    thread.write(message)
    
    # Запускаем ассистента и ждем ответа
    response = assistant.run(thread.id).wait()
    return response.message.parts[0]  # Возвращаем первый элемент ответа

async def ai_assistant_new_thread(chat_id: str) -> str:
    """Создает новый поток для чата."""
    # Создаем новый поток с заданным именем и временем жизни 7 дней
    thread = sdk.threads.create(
        name=f'thread-{chat_id}',  # Имя потока, основанное на идентификаторе чата
        ttl_days=7,  # Время жизни потока в днях
        expiration_policy="SINCE_LAST_ACTIVE"  # Политика истечения
    )
    return thread.id  # Возвращаем идентификатор нового потока